21/2/2024

                NGÔN NGỮ TRUY VẤN CÓ CẤU TRÚC

SELECT< Danh sách các cột cần hiển thị>
FROM< Danh sách các bảng>

  *Hiển thị thông tin cả bảng
    SELECT*
    FROM <Tên Bảng>

Vd: Cho biết số lượng và giá bán của mỗi mặt hàng
Hiển thị MaHang, TenHang, SoLuong, GiaBan

SELECT MaHang, TenHang, SoLuong, GiaBan
FROM MatHang nối ChiTietDatHang
=>  SELECT MATHANG.MAHANG, TENHANG, CHITIETDATHANG.SOLUONG, GIABAN 
    FROM MATHANG INNER JOIN CHITIETDATHANG ON MATHANG.MAHANG = CHITIETDATHANG.MAHANG


Vd: Cho biết số lượng và giá hàng của mỗi mặt hàng
Hiển thị MaHang, TenHang, SoLuong, GiaHang
Bảng MatHang
=>  SELECT MATHANG.MAHANG, TENHANG, SOLUONG, GIAHANG
    FROM MATHANG 

Cấu trúc hoàn chỉnh    
SELECT
FROM
WHERE
ORDER BY
HAVING (SELECT
        FROM
        ...)

                        MỆNH ĐỀ SELECT
			
        * Các cột hiển thị cách nhau bởi dấu phẩy
        Ví Dụ: Hiển thị mã nhân viên, họ tên, lương cơ bản của mỗi nhân viên
        =>  SELECT MANHANVIEN, HO+' '+TEN, LUONGCOBAN
            FROM NHANVIEN   

            		//*********************//
	    
28/2/2024

ĐỔI TÊN CỘT
    <TÊN CŨ> AS <TÊN MỚI>
Note: Tên là một chuỗi ký tự -> đặt trong ' '
Vd:
    SELECT MANHANVIEN AS 'Mã Nhân Viên'
    FROM NHANVIEN
-> Bảng với nội dung tên cột -> Mã Nhân Viên

    * Các phép toán + - * / (nằm trong SELECT)
    Vd: Cho biết Mã hàng, Tên hàng, Số lượng, Gía Hàng, và Thành tiền trong đó Thành tiên = Số lượng * Gía Hàng
->  SELECT MAHANG AS 'Mã hàng', TENHANG AS 'Tên hàng', SOLUONG AS 'Số lượng', GIAHANG AS 'Giá hàng', SOLUONG * GIAHANG AS 'Thành tiền'
    FROM MATHANG    

                    Câu lệnh CASE..WHEN..END  

        Cú pháp:    CASE   
                        WHEN <BT điều kiện (true) > THEN <Câu lệnh 1(value)>
                        ELSE <Câu lệnh 2(value)>
                    END
                -> Hiển thị 1 cột trong SELECT
        Vd1: Nếu GioiTinh= 0 thì Nữ ngược lại Nam
            CASE 
                WHEN GioiTinh=0 THEN 'Nữ'
                ELSE 'Nam'
            END
        Vd2: Hiển thị Mã sinh viên, họ đệm, tên và giới tính(=0 Nam ,=1 Nữ)
            SELECT MaSV,Hodem,Ten, 
                CASE 
                    WHEN GioiTinh=0 THEN 'Nữ'
                    ELSE 'Nam'
                END AS 'Giới tính' // tên cột
            FROM SINHVIEN
        Vd3: Hiển thị Mã nhân viên, họ tên, lương cơ bản, phụ cấp và lương trong đó:
                    Lương = Lương cơ bản + Phụ cấp;
            ->  SELECT MANHANVIEN AS 'Mã nhân viên', HO +' '+ TEN AS 'Họ và tên', LUONGCOBAN AS 'Lương cơ bản', PHUCAP AS 'Phụ cấp',
                    CASE
                        WHEN PHUCAP IS NULL THEN LUONGCOBAN
                        ELSE PHUCAP+LUONGCOBAN
                    END AS 'Lương'
                FROM NHANVIEN
        *Note: PHUCAP IS NULL -> Phụ cấp khác Null
    *   Để hiển thị tên các cột chung khi làm việc trên nhiều bảng 
        thì chỉ rõ tên cột chung thuộc bảng nào:
            <Tên bảng>.<Tên cột chung>
        Lỗi: Ambiguous column name (trùng cột)
        Vd: Hiển thị Mã hàngm tên hàng, số lượng và giá bán của mặt hàng.
        Hiển thị: MaHang, TenHang, SoLuongm GiaBan
        
                	TỪ KHÓA TOP, PERCENT
		
            TOP: Lấy số lượng từ trên (xếp hạng)
            PERCENT: Lấy số lượng % từ trên (xêp hạng)
        Vd:
            SELECT TOP 5 MASV, HODEM, TEN
            FROM SINHVIEN
        //lấy top 5 sinh viên ...
        Note: lấy thứ tự ...
	
		 	//*********************//
        
13/3/2024

                  MỆNH ĐỀ FROM

        FROM <Danh sách các bảng>
        Cú pháp:
        // Nối 2 bảng
        * FROM <Tên bảng 1> JOIN/INNER JOIN <Tên bảng 2> ON
        <Tên bảng 1>.<Tên cột chung> =<Tên bảng 2>.<Tên cột chung> 

    Ví dụ 1: MatHang ChiTietDatHang
    => FROM MatHang INNER JOIN ChiTietDatHang ON   
        MatHang.MaHang= ChiTietDatHang.MaHang

    Ví dụ 2: Cho biết Mã hàng, Tên hàng, Số lượng, Gía Bán của mỗi mặt hàng
        Hiển thị: MaHang, TenHang, SoLuong, GiaBan
        Bảng: MatHang, ChiTietDatHang

    SELECT MatHang.MaHang, TenHang, SoLuong, GiaBan
    => FROM MatHang INNER JOIN ChiTietDatHang ON
        MatHang.MaHang= ChiTietDatHang.MaHang

        // Nối >3 bảng
        * FROM <Tên bảng 1> JOIN/INNER JOIN <Tên bảng 2> ON
        <Tên bảng 1>.<Tên cột chung> =<Tên bảng 2>.<Tên cột chung> 
                INNER JOIN <Tên bảng 3> ON TB1/TB2.<cột chung> = TB3.<cột chung>
        Note: Xem bảng 1 nối bảng 2 là 1 bảng mới, tiếp tục nối với bảng thứ 3 bằng cột chung
    
    Ví dụ 1: 
    =>  FROM MatHang INNER JOIN ChiTietDatHang ON MatHang.MaHang= ChiTietDatHang.MaHang 
                    INNER JOIN LoaiHang ON MatHang.MaLoaiHang = LoaiHang.MaLoaiHang  
    Ví dụ 2: Cho biết họ, tên nhân viên đã đặt hàng những mã hàng, tên hàng nào ?

                    MỆNH ĐỀ WHERE

            WHERE <Danh sách điều kiện> 
            * Phép toán so sánh: >, >=, <, <=, <> (khác)
            * Phép toán logic: AND, OR, Note

    Ví dụ: Cho biết mặt hàng có số lượng bán ra >50 và giá bán >1000
        Hiển thị: MaHang, TenHang
        Bảng: MatHang
        Điều kiện: SoLuong >50 AND GiaHang >1000

    =>  SELECT MaHang, TenHang
    FROM MatHang
    WHERE SoLuong >50 AND GiaHang >1000

            * BETWEEN A AND B: A<=X<=BETWEEN
            * IS NULL, IS NOT NULL
            * IN hoặc NOT IN: sau IN hoặc NOT IN là giá trị của một tập hợp (trong bài: Cấu trúc Select lồng nhau)

    Ví dụ: Cho biết mã nhân viên, họ, tên của nững nhân viên có hệ số lương 2.34, 2.67, 3.00
    =>  SELECT MaNhanVien, Ho, Ten, HeSoLuong
        FROM MaNhanVien
        WHERE HeSoLuong =2.34 OR
                HeSoLuong =2.67 OR
                    HeSoLuong =3.00
        hoặc
        WHERE HeSoLuong IN (2.34, 2.67, 3.00)

            * Ký tự đại diện: LIKE ...%

    Ví dụ 1: Cho biết những nhân viên có họ là Nguyễn 
    =>  SELECT HO, TEN
        FROM NHANVIEN
        WHERE HO LIKE N'Nguyễn%'

    Ví dụ 2: Cho biết công nhân có biển số xe là 75 phía sau
    =>  SELECT *
        FROM CONGDAN
        WHERE BIENSOXE LIKE '%75'

    Ví dụ 3: Cho biết công dân có biển số xe có số 75

    =>  SELECT *
        FROM CONGDAN
        WHERE BIENSOXE LIKE '%75%'

  			//*********************//

20/3/2024
        
                MỆNH ĐỀ ORDER BY: Sắp xếp

            SELECT 
            FROM
            WHERE
            ORDER BY

            ORDER BY <Tên cột sắp xếp> ASC/DESC
                Trong đó: ASC: tăng dần, DESC: Giảm dần
                Lưu ý: Khi sắp xếp trên nhiều cột thì các cột cách nhau bởi dấu phẩy

            VD: SELECT*
                FROM NHACUNGCAP
                ORDER BY TenNhaCC ASC, MaSoThue DESC

                NHÓM HÀM THỐNG KÊ
                    SUM, COUNT, AVG
            Lưu ý: 
                - Các nhóm hàm thống kê nằm trong SELECT
                - Khi sử dụng nhóm hàm thóng kê phải sử dụng từ khóa GROUP BY   
                        SELECT
                        FROM
                        WHERE 
                        ORDER BY
                        GROUP BY
                - Sau GROUP BY các cột nằm trong SELECT thì phải xuất hiện sau GROUP BY trừ nhóm hàm thống KÊ
            
            VD: Tính điểm trung bình của mỗi sinh viên biết rằng:
                    DTB = SUM(DIEM*SOTC)/SUM(STC)
                DTB = SUM(DIEMLAN1*SODVHT)/SUM(SODVHT)

                SELECT SINHVIEN.MASV, HODEM, TEN, SUM(DIEMLAN1*SODVTH)/SUM(SODVHT) AS 'DTB'
                FROM SINHVIEN INNER JOIN DIEMTHI ON SINHVIEN.MASV = DIEMTHI.MASV
                                INNER JOIN MONHOC ON DIEMTHI.MAMONHOC = MONHOC.MAMONHOC
                GROUP BY SINHVIEN.MASV, HODEM, TEN

			 //*********************//

27/3/2024

			  ĐIỀU KIỆN CỦA HÀM THỐNG KÊ: HAVING

                * WHERE (điều kiện của cột đã có trong cơ sở dữ liệu) <> HAVING (điều kiện của nhóm hàm thống kê)

                Ví dụ 1: Thống kê sinh viên có điểm trung bình >=8

                    SELECT MASV, HO, TEN
                    SUM(DIEMLAN1*SODVHT)/SUM(SODVHT) AS DTB
                    FROM SinhVien, DiemThi, MONHOC
                    GROUP BY MASV, HO, TEN
                    HAVING SUM(DIEMLAN1*SODVHT)/SUM(SODVHT)>=8


                            CÁC LOẠI PHÉP NỐI

                * JOIN / INNER JOIN

                    PHÉP NỐI TRÁI: LEFT JOIN
                    FROM <Tên bảng 1> LEFT JOIN <Tên bảng 2>
                    ON <Tên bảng 1>.<Tên cột chung> = <Tên bảng 2>.<Tên cột chung>

                    PHÉP NỐI PHẢI: RIGHT JOIN
                    FROM <Tên bảng 1< RIGHT JOIN <Tên bảng 2>
                    ON <Tên bảng 1>.<Tên cột chung> = <Tên bảng 2>.<Tên cột chung> 

                Ví dụ: Số đơn đặt hàng của mỗi nhân viên 

                    select NHANVIEN.MANHANVIEN, HO, TEN, COUNT(DONDATHANG.MANHANVIEN) AS 'SO DON'
                    from NHANVIEN LEFT JOIN DONDATHANG ON NHANVIEN.MANHANVIEN = DONDATHANG.MANHANVIEN
                    group by NHANVIEN.MANHANVIEN, HO, TEN

      			 //*********************//

3/4/2024
			 CẤU TRÚC LỒNG NHAU 

        *   Cấu trúc 1: Từng/ Chưa từng ... IN/ NOT IN 
            select
            from 
            where <cột dữ liệu> in/ not in (select 
                                        from 
                                        where)

                VD1: Cho biết thông tin những nhà cung cấp đã từng đăng ký cung cấp 
            ->  select*
                from NHACUNGCAP
                where MANHACC in (select distinct MANHACC
                                    from DANGKYCUNGCAP)

                VD2: Liệt kê thông tin những nhà cung cấp đã đăng ký cung cấp có Dòng xe là Hiace hoặc là Cerato
            ->      select*
                    from NHACUNGCAP
                    where (MaNhaCC) in (select distinct MaNhaCC 
                                        from DANGKYCUNGCAP 
                                        where DongXe ='Hiace' or DongXe='Cerato')  


        *   Cấu trúc lồng nhau nhiều nhất/ ít nhất
            select 
            from
            where
            group by
            having < hàm thống kê> >= ALL (select 
                                            from 
                                        where 
                                        group by)

                VD1: Thông tin các sinh viên có điểm trung bình cao nhất
		
            ->  select SINHVIEN.MASV, HODEM, TEN, SUM(DIEMLAN1*SODVHT)/SUM(SODVHT) as 'DTB'
                from SINHVIEN INNER JOIN DIEMTHI ON SINHVIEN.MASV = DIEMTHI.MASV
                                INNER JOIN MONHOC ON DIEMTHI.MAMONHOC = MONHOC.MAMONHOC
                group by SINHVIEN.MASV, HODEM, TEN
                having SUM(DIEMLAN1*SODVHT)/SUM(SODVHT) >= all (select SUM(DIEMLAN1*SODVHT)/SUM(SODVHT) as 'DTB'
                                                                from SINHVIEN INNER JOIN DIEMTHI ON SINHVIEN.MASV = DIEMTHI.MASV
                                                                                INNER JOIN MONHOC ON DIEMTHI.MAMONHOC = MONHOC.MAMONHOC
                                                                group by SINHVIEN.MASV, HODEM, TEN )


                VD2: Nhân viên nào có lương cơ bản lớn nhất 
		
            ->  //c1
                select MANHANVIEN, HO+' '+TEN as 'HO TEN'
                from NHANVIEN
                where LUONGCOBAN >=ALL (select LUONGCOBAN from NHANVIEN)
                //c2
                select MANHANVIEN, HO+' '+TEN as 'HO TEN'
                from NHANVIEN
                where LUONGCOBAN = (select max(LUONGCOBAN) from NHANVIEN)
                //c3
                select MANHANVIEN, HO+' '+TEN as 'HO TEN'
                from NHANVIEN
                where LUONGCOBAN = (select top 1 LUONGCOBAN from NHANVIEN order by LUONGCOBAN desc)

			//*********************//

   10/4/2024
   	datediff(hour, sttime, entime) -> hieu cua 2 thoi gian don vi gio 

